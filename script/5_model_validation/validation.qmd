---
title: "Validation of overall risk index using NCDHHS E. coli testing results"
format: html
toc: true
editor: visual
code-fold: true
warning: false 
message: false
self-contained: true
tabset: true
---

```{r}
# ----------------------------------------
# R Script to validate overall risk index using NCDHHS E. coli testing results
# Author: Jennifer Zhang
# Last edited: 2025-08-14
# ----------------------------------------
```

### 1.1 Load packages and data

First, we load the data below and prepare it for the analysis.

```{r, include=FALSE}
# Load packages
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(changepoint)
library(ROCit)
library(cutpointr)
library(rpart)
library(rpart.plot)
library(smotefamily)
```

```{r, include=FALSE}
# Read files
risk <- st_read("nc_grid_index.gpkg")

risk_capacity <- st_read("index_capacity.gpkg")
risk_hazard <- st_read("index_hazard.gpkg")
risk_vulnerability <- st_read("index_vulnerability.gpkg")

microbio_data_hurricane <- read.csv("ecoli_coords_hurricane.csv", strip.white = TRUE)
microbio_data_microbiology <- read.csv("ecoli_coords_microbio.csv", strip.white = TRUE)
```

```{r collapse = TRUE}
# Join NCDHHS and risk index for microbio_data_hurricane
microbio_sf_hurricane <- st_as_sf(microbio_data_hurricane, coords = c("Longitude", "Latitude"), crs = 4326)
microbio_proj_hurricane <- st_transform(microbio_sf_hurricane, st_crs(risk))

microbio_with_risk_hurricane <- st_join(microbio_proj_hurricane, risk, join = st_within) %>%
  # Filter out empty results
  filter(!is.na(risk)) %>%
  filter(!Ecoli_Result %in% c("Not Tested", ""))

nrow(microbio_with_risk_hurricane)

microbio_with_risk_hurricane$Date_Collected <- mdy(microbio_with_risk_hurricane$Date_Collected)
microbio_with_risk_hurricane <- microbio_with_risk_hurricane %>%
  # Filter out tests from the same sampling site, only keeping the oldest sample
  group_by(Street_Address) %>%
  arrange(Date_Collected) %>%
  slice(1) %>%
  ungroup()

nrow(microbio_with_risk_hurricane)

# Join NCDHHS and risk index for microbio_data_microbiology
microbio_sf_microbiology <- st_as_sf(microbio_data_microbiology, coords = c("Longitude", "Latitude"), crs = 4326)
microbio_proj_microbiology <- st_transform(microbio_sf_microbiology, st_crs(risk))

microbio_with_risk_microbiology <- st_join(microbio_proj_microbiology, risk, join = st_within) %>%
  # Filter out empty results
  filter(!is.na(risk)) %>%
  filter(!Ecoli_Result %in% c("Not Tested", "")) 

nrow(microbio_with_risk_microbiology)

microbio_with_risk_microbiology$Date_Collected <- mdy(microbio_with_risk_microbiology$Date_Collected)
microbio_with_risk_microbiology <- microbio_with_risk_microbiology %>%
  # Filter out tests from the same sampling site, only keeping the oldest sample
  group_by(Street_Address) %>%
  arrange(Date_Collected) %>%
  slice(1) %>%
  ungroup()

nrow(microbio_with_risk_microbiology)
```

Some of the addresses were not fully reported (i.e. only street or road names were included in the NCDHHS report) and this was reflected after geocoding. However, we will proceed without filtering out testing locations with a geocoding accuracy score of less than 0.8 (as per the Geocod.io documentation) due to the 1 km x 1 km resolution of the risk index.

### 1.2 Description of sampling sites

The plot of sampling sites below shows that the samples tested during the [Hurricane Helene testing program](https://celr.dph.ncdhhs.gov/hurricaneHelene) (shown in [**purple**]{style="color:purple;"}) were primarily collected in western counties of North Carolina. Meanwhile, the samples collected as part of the general microbiology testing program (shown in [**orange**]{style="color:orange;"}) are distributed across all of North Carolina.

```{r}
# Plot locations of well sampling sites
plot(st_geometry(risk), col = 'lightblue', border = NA)
plot(st_geometry(microbio_proj_microbiology), col = 'orange', add = TRUE)
plot(st_geometry(microbio_proj_hurricane), col = 'purple', add = TRUE)
```

### 1.3 Merge `microbio_with_risk_hurricane` and `microbio_with_risk_microbiology`

Samples that were repeated in both `microbio_with_risk_hurricane` and `microbio_with_risk_microbiology` were filtered so there was only one occurrence in the overall `microbio_with_risk` dataset.

The table of sampling frequencies reveals that Orange County, Alamance County, and Chatham County have the largest sample sizes.

```{r collapse = TRUE}
# Combine raw datasets and remove out duplicates
microbio_with_risk <- rbind(microbio_with_risk_hurricane, microbio_with_risk_microbiology) %>%
  filter(!duplicated(StarLiMS_ID))

# Sort by counties with most samples
sort(table(microbio_with_risk$System_Name), decreasing = TRUE)
```

We observe:

-   484 uncontaminated and 38 contaminated E. coli samples in `microbio_with_risk_hurricane`

-   6620 uncontaminated and 150 contaminated E. coli samples in `microbio_with_risk_microbiology`

-   329 uncontaminated and 193 contaminated Total Coliform samples in `microbio_with_risk_hurricane`

-   4950 uncontaminated and 1820 contaminated Total Coliform samples in `microbio_with_risk_microbiology`.

There is a major class imbalance between uncontaminated and contaminated samples which will be addressed via permutation tests and SMOTE.

```{r collapse = TRUE}
# Check for the values included in Ecoli_Result and Total_Coliform_Result
table(microbio_with_risk_hurricane$Ecoli_Result)
table(microbio_with_risk_microbiology$Ecoli_Result)

table(microbio_with_risk_hurricane$Total_Coliform_Result)
table(microbio_with_risk_microbiology$Total_Coliform_Result)
```

```{r}
# Separate binary and continuous testing results, remove rows where risk index is NA
microbio_binary <- microbio_with_risk %>%
  filter(Ecoli_Result %in% c("Absent", "Present")) %>%
  rename(Ecoli_Result_Binary = Ecoli_Result) %>%
  rename(Coliform_Result_Binary = Total_Coliform_Result)

microbio_continuous <- microbio_with_risk %>%
  filter(!(Ecoli_Result %in% c("Absent", "Present"))) %>%
  mutate(Ecoli_Result_Binary = ifelse(Ecoli_Result %in% c("0", "<1", "1"), "Absent", "Present")) %>%
  mutate(Coliform_Result_Binary = ifelse(Total_Coliform_Result%in% c("0", "<1", "1"), "Absent", "Present"))
```

There were 522 samples specific to Hurricane Helene testing programs and 6770 samples from general well testing after Hurricane Helene.

In total, there are 6751 binary testing results and 68 continuous testing results.

```{r collapse = TRUE}
# Number of hurricane tests
length(microbio_with_risk_hurricane$System_Name)
# Number of microbiology tests
length(microbio_with_risk_microbiology$System_Name)

# Number of binary E. coli tests
length(which(microbio_with_risk$Ecoli_Result %in% c("Absent", "Present")))
# Number of continuous E. coli tests
length(which(!(microbio_with_risk$Ecoli_Result %in% c("Absent", "Present"))))

# Number of binary Total Coliform tests
length(which(microbio_with_risk$Total_Coliform_Result %in% c("Absent", "Present")))
# Number of continuous Total Coliform tests
length(which(!(microbio_with_risk$Total_Coliform_Result %in% c("Absent", "Present"))))
```

In the pooled datasets created below, binary and continuous E. coli and Total Coliform testing results measured in MPN (most probable number)/100 mL were pooled together after the continuous testing results were binarized. The [WHO](https://pmc.ncbi.nlm.nih.gov/articles/PMC7313150/#:~:text=According%20to%20the%20World%20Health,100%20ml%20is%20medium%20risk.) recommends that “Zero count of E. coli per 100 ml of water is considered safe for drinking. A count of 1–10 MPN/100 ml is regarded as low risk; 11–100 MPN/100 ml is medium risk.” Therefore, we consider continuous testing results of 0, \<1, or 1 MPN/100 mL to be uncontaminated, and testing results \>1 MPN/100 mL to be contaminated.

```{r}
# Turn all testing results into Absent or Present
microbio_pooled_hurricane <- microbio_with_risk_hurricane %>%
  mutate(Ecoli_Result_Binary = ifelse(Ecoli_Result %in% c("0","<1", "1", "Absent"), "Absent", "Present")) %>%
  mutate(Coliform_Result_Binary = ifelse(Total_Coliform_Result%in% c("0","<1", "1", "Absent"), "Absent", "Present"))

microbio_pooled_microbiology <- microbio_with_risk_microbiology %>%
  mutate(Ecoli_Result_Binary = ifelse(Ecoli_Result %in% c("0", "<1", "1", "Absent"), "Absent", "Present")) %>%
  mutate(Coliform_Result_Binary = ifelse(Total_Coliform_Result%in% c("0", "<1", "1", "Absent"), "Absent", "Present"))

microbio_pooled <- microbio_with_risk %>%
  mutate(Ecoli_Result_Binary = ifelse(Ecoli_Result %in% c("0", "<1", "1", "Absent"), "Absent", "Present")) %>%
  mutate(Coliform_Result_Binary = ifelse(Total_Coliform_Result%in% c("0", "<1", "1", "Absent"), "Absent", "Present"))
```

Since `microbio_with_risk_microbiology` contained samples outside of western North Caroline, the region most affected by Hurricane Helene, we will create `microbio_pooled_affected` to merge `microbio_with_risk_hurricane` with only `microbio_with_risk_microbiology` samples that were collected from the 25 counties listed in this [paper](https://pubs.acs.org/doi/10.1021/acs.estlett.5c00503).

After filtering for only western counties, there were 1635 samples remaining.

```{r}
counties <- c("ALEXANDER CO ENVIRONMENTAL HEALTH", 
              "ALLEGHANY CO ENVIRONMENTAL HEALTH", 
              "ASHE CO ENVIRONMENTAL HEALTH", 
              "AVERY CO ENVIRONMENTAL HEALTH", 
              "BUNCOME CO ENVIRONMENTAL HEALTH", 
              "BURKE CO ENVIRONMENTAL HEALTH", 
              "CALDWELL CO ENVIRONMENTAL HEALTH", 
              "CATAWBA CO ENVIRONMENTAL HEALTH", 
              "CLAY CO ENVIRONMENTAL HEALTH", 
              "CLEVELAND CO ENVIRONMENTAL HEALTH", 
              "GASTON CO ENVIRONMENTAL HEALTH", 
              "HAYWOOD CO ENVIRONMENTAL HEALTH", 
              "HENDERSON CO ENVIRONMENTAL HEALTH", 
              "JACKSON CO ENVIRONMENTAL HEALTH", 
              "LINCOLN COUNTY ENVIRONMENTAL HEALTH", 
              "MACON CO ENVIRONMENTAL HEALTH", 
              "MADISON CO ENVIRONMENTAL HEALTH", 
              "MCDOWELL CO ENVIRONMENTAL HEALTH", 
              "MITCHELL CO ENVIRONMENTAL HEALTH", 
              "POLK CO ENVIRONMENTAL HEALTH", 
              "RUTHERFORD CO ENVIRONMENTAL HEALTH", 
              "TRANSYLVANIA CO ENVIRONMENTAL HEALTH", 
              "WATAUGA CO ENVIRONMENTAL HEALTH", 
              "WILKES CO ENVIRONMENTAL HEALTH", 
              "YANCEY COUNTY ENVIROMENTAL HEALTH")

microbio_pooled_affected <- rbind(microbio_pooled_hurricane, microbio_pooled_microbiology) %>%
  filter(!duplicated(StarLiMS_ID)) %>%
  filter(System_Name %in% counties)
```

There is a significant difference between the risk indices of samples collected in western counties vs. samples collected in the rest of North Carolina (p = 0.4901e-05), with samples from the western counties having a mean risk of 0.181 and non-western counties having a mean risk of 0.175.

```{r}
microbio_pooled <- microbio_pooled %>% mutate(Is_Western = System_Name %in% counties)

summary(microbio_pooled$risk[microbio_pooled$Is_Western == TRUE])
summary(microbio_pooled$risk[microbio_pooled$Is_Western == FALSE])

wilcox.test(microbio_pooled$risk ~ microbio_pooled$Is_Western,
            alternative = "less")
```

### 1.4 Percentage of contaminated samples per week

We use the plots to determine a cutoff date for the time period when a hurricane's aftermath continues to impact microbial contamination in well water.

#### Hurricane Helene testing

For Hurricane Helene testing, the smoothed curve shows that the proportion of contaminated E. coli samples was 0% from 1/5/25 (the weeks of 12/22/24 and 12/29/24 had no samples) to 5/11/25, excluding the week of 3/2/5 which had 12.5% contaminated samples. The proportion of contaminated Total Coliform samples was relatively constant from the weeks of 1/5/25 to 3/23/25.

The sample size per week decreased over time, likely due to decreased interest in testing after the impacts of Hurricane Helen subsided.

```{r, fig.show="hold", out.width="30%"}
# microbio_pooled_hurricane$Date_Collected <- mdy(microbio_pooled_hurricane$Date_Collected)
microbio_weekly_summary_hurricane <- microbio_pooled_hurricane %>%
  mutate(week = floor_date(Date_Collected, "week")) %>%
  group_by(week) %>%
  summarize(ecoli_proportion = mean(Ecoli_Result_Binary == "Present"), coliform_proportion = mean(Coliform_Result_Binary == "Present"), n = n())

ggplot(microbio_weekly_summary_hurricane, aes(x = week, y = ecoli_proportion)) + 
  labs(title = "Proportion of contaminated E. coli samples per week (Hurricane Helene testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  theme_minimal()

ggplot(microbio_weekly_summary_hurricane, aes(x = week, y = coliform_proportion)) + 
  labs(title = "Proportion of contaminated Total Coliform samples per week (Hurricane Helene testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary_hurricane, aes(x = week, y = n)) + 
  labs(title = "Number of samples per week (Hurricane Helene testing)") +
  geom_col() + geom_smooth(se=F) + 
  theme_minimal()
```

#### General microbiology testing

For general microbiology testing, the smoothed curve shows that the proportion of contaminated samples for both E. coli and Total Coliform testing reached the lowest point around the beginning of March.

```{r, fig.show="hold", out.width="30%"}
# microbio_pooled_microbiology$Date_Collected <- mdy(microbio_pooled_microbiology$Date_Collected)
microbio_weekly_summary_microbiology <- microbio_pooled_microbiology %>%
  mutate(week = floor_date(Date_Collected, "week")) %>%
  group_by(week) %>%
  summarize(ecoli_proportion = mean(Ecoli_Result_Binary == "Present"), coliform_proportion = mean(Coliform_Result_Binary == "Present"), n = n())

ggplot(microbio_weekly_summary_microbiology, aes(x = week, y = ecoli_proportion)) + 
  labs(title = "Proportion of contaminated E. coli samples per week (General microbiology testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary_microbiology, aes(x = week, y = coliform_proportion)) + 
  labs(title = "Proportion of contaminated Total Coliform samples per week (General microbiology testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary_microbiology, aes(x = week, y = n)) + 
  labs(title = "Number of samples per week (General microbiology testing)") +
  geom_col() + geom_smooth(se=F) + 
  theme_minimal()
```

#### Hurricane Helene and general microbiology testing

When results for both testing programs are combined, the proportion of contaminated E. coli samples reached the lowest point in mid-February, whereas the proportion of contaminated Total Coliform samples reached the lowest point in early March.

```{r, fig.show="hold", out.width="30%"}
# microbio_pooled$Date_Collected <- mdy(microbio_pooled$Date_Collected)
microbio_weekly_summary_pooled <- microbio_pooled %>%
  mutate(week = floor_date(Date_Collected, "week")) %>%
  group_by(week) %>%
  summarize(ecoli_proportion = mean(Ecoli_Result_Binary == "Present"), coliform_proportion = mean(Coliform_Result_Binary == "Present"), n = n())

ggplot(microbio_weekly_summary_pooled, aes(x = week, y = ecoli_proportion)) + 
  labs(title = "Proportion of contaminated E. coli samples per week (Hurricane Helene and general microbiology testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary_pooled, aes(x = week, y = coliform_proportion)) + 
  labs(title = "Proportion of contaminated Total Coliform samples per week (Hurricane Helene and general microbiology testing)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary_pooled, aes(x = week, y = n)) + 
  labs(title = "Number of samples per week (Hurricane Helene and general microbiology testing)") +
  geom_col() + geom_smooth(se=F) + 
  theme_minimal()
```

#### Hurricane Helene and general microbiology testing in western counties

When results for both testing programs are combined and only the western counties listed [here](https://pubs.acs.org/doi/10.1021/acs.estlett.5c00503) are considered, the proportion of contaminated E. coli samples reached the lowest point in mid-February, whereas the proportion of contaminated Total Coliform samples reached the lowest point in early March.

```{r, fig.show="hold", out.width="30%"}
# microbio_pooled_affected$Date_Collected <- mdy(microbio_pooled_affected$Date_Collected)
microbio_weekly_summary <- microbio_pooled_affected %>%
  mutate(week = floor_date(Date_Collected, "week")) %>%
  group_by(week) %>%
  summarize(ecoli_proportion = mean(Ecoli_Result_Binary == "Present"), coliform_proportion = mean(Coliform_Result_Binary == "Present"), n = n())

ggplot(microbio_weekly_summary, aes(x = week, y = ecoli_proportion)) + 
  labs(title = "Proportion of contaminated E. coli samples per week (Hurricane Helene and general microbiology testing, western counties)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary, aes(x = week, y = coliform_proportion)) + 
  labs(title = "Proportion of contaminated Total Coliform samples per week (Hurricane Helene and general microbiology testing, western counties)") +
  geom_col() + geom_smooth(se=F) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") + 
  theme_minimal()

ggplot(microbio_weekly_summary, aes(x = week, y = n)) + 
  labs(title = "Number of samples per week (Hurricane Helene and general microbiology testing, western counties)") +
  geom_col() + geom_smooth(se=F) + 
  theme_minimal()
```

### 1.5 Filter dates to effective time period (9/25/24 - 3/1/25)

After filtering the dates to the effective time period, there were 3163 samples in `microbio_pooled_filtered` (all locations) and 806 samples for `microbio_pooled_affected_filtered` (western counties).

We observe:

-   3097 uncontaminated and 66 contaminated E. coli samples in `microbio_pooled_filtered`

-   778 uncontaminated and 28 contaminated E. coli samples in `microbio_pooled_affected_filtered`

-   2333 uncontaminated and 830 contaminated Total Coliform samples in `microbio_pooled_filtered`

-   573 uncontaminated and 233 contaminated Total Coliform samples in `microbio_pooled_affected_filtered`.

Downstream analysis will be performed using `microbio_pooled_affected_filtered`.

```{r collapse = TRUE}
start_date <- '2024-09-25'
end_date <- '2025-03-01'

microbio_pooled_filtered <- microbio_pooled %>% filter(between(Date_Collected, as.Date(start_date), as.Date(end_date)))
microbio_pooled_affected_filtered <- microbio_pooled_affected %>% filter(between(Date_Collected, as.Date(start_date), as.Date(end_date)))

nrow(microbio_pooled_filtered)
nrow(microbio_pooled_affected_filtered)

table(microbio_pooled_filtered$Ecoli_Result_Binary)
table(microbio_pooled_affected_filtered$Ecoli_Result_Binary)

table(microbio_pooled_filtered$Coliform_Result_Binary)
table(microbio_pooled_affected_filtered$Coliform_Result_Binary)
```

### 2.1.1 Risk index distribution for E. coli

Based on the Shapiro-Wilk tests, we reject the null hypothesis that the sample of risk indices for uncontaminated samples comes from a normal distribution (p = 1.223e-08), but we fail to reject the null hypothesis for contaminated samples (p = 0.6409). However, looking at the raincloud plot for contaminated samples, we see that it is non-normal.

```{r}
table(microbio_pooled_affected_filtered$Ecoli_Result_Binary)
by(microbio_pooled_affected_filtered$risk, microbio_pooled_affected_filtered$Ecoli_Result_Binary, summary)

ggplot(microbio_pooled_affected_filtered) +
  aes(x = Ecoli_Result_Binary, y = risk, color = Ecoli_Result_Binary) +
  ggdist::stat_halfeye(aes(fill = Ecoli_Result_Binary),
                       adjust = 0.5, width = 0.6, .width = 0, 
                       justification = -0.3) + 
  geom_boxplot(width = .25, outlier.shape = NA) +
  geom_point(size = 1.5, alpha = 0.2, 
             position = position_jitter(seed = 1, width = .1)) +
  theme_minimal()

shapiro.test(subset(microbio_pooled_affected_filtered, Ecoli_Result_Binary == "Absent")$risk)
shapiro.test(subset(microbio_pooled_affected_filtered, Ecoli_Result_Binary == "Present")$risk)
```

### 2.1.2 Wilcoxon rank-sum test for western counties

There is a marginally significant difference between the mean risk index for locations with uncontaminated vs. contaminated E. coli tests (p = 0.07763).

```{r}
wilcox.test(microbio_pooled_affected_filtered$risk ~ microbio_pooled_affected_filtered$Ecoli_Result_Binary,
            alternative = "less")
```

### 2.2.1 Risk index distribution for Total Coliform

Based on the raincloud plots and Shapiro-Wilk tests, we reject the null hypothesis that the sample of risk indices for both uncontaminated (p = 3.335e-07) and contaminated samples (p = 0.00465) comes from a normal distribution.

```{r}
table(microbio_pooled_affected_filtered$Coliform_Result_Binary)
by(microbio_pooled_affected_filtered$risk, microbio_pooled_affected_filtered$Coliform_Result_Binary, summary)

ggplot(microbio_pooled_affected_filtered) +
  aes(x = Coliform_Result_Binary, y = risk, color = Coliform_Result_Binary) +
  ggdist::stat_halfeye(aes(fill = Coliform_Result_Binary),
                       adjust = 0.5, width = 0.6, .width = 0, 
                       justification = -0.3) + 
  geom_boxplot(width = .25, outlier.shape = NA) +
  geom_point(size = 1.5, alpha = 0.2, 
             position = position_jitter(seed = 1, width = .1)) +
  theme_minimal()

shapiro.test(subset(microbio_pooled_affected_filtered, Coliform_Result_Binary == "Absent")$risk)
shapiro.test(subset(microbio_pooled_affected_filtered, Coliform_Result_Binary == "Present")$risk)
```

### 2.2.2 Wilcoxon rank-sum test for all counties

There is a marginally significant difference between the mean risk index for locations with uncontaminated vs. contaminated Total Coliform tests (p = 0.064).

```{r}
wilcox.test(microbio_pooled_affected_filtered$risk ~ microbio_pooled_affected_filtered$Coliform_Result_Binary,
            alternative = "less")
```

## 3. Logistic regression

The code below constructs four logistic regression models in total to classify samples into uncontaminated or contaminated classes. For E. coli contamination, it constructs one model using the overall risk index and one model using the individual risk modules: vulnerability, hazard, and capacity. The same is done for Total Coliform contamination.

For E. coli contamination, the overall risk was not a significant predictor (p = 0.259). In the model with the individual risk modules, none of the modules were significant predictors. The model using overall risk as a sole predictor (AIC = 283.6) performed better than the module using individual risk modules (AIC = 286.16).

For Total Coliform contamination, the overall risk was not a significant predictor (p = 0.153). In the model with the individual risk modules, the capacity module was a highly significant predictor (p = 0.000276). Unlike for E. coli contamination, the model using individual risk modules (AIC = 1079.6) performed better than the module using overall risk (AIC = 1071.7).

```{r}
microbio_pooled_affected_filtered <- microbio_pooled_affected_filtered %>%
                mutate(Ecoli_Result_Binary_Model = ifelse(Ecoli_Result_Binary %in% c("Absent"), 0, 1)) %>%
                mutate(Coliform_Result_Binary_Model = ifelse(Coliform_Result_Binary %in% c("Absent"), 0, 1))

log_model_ecoli <- glm(Ecoli_Result_Binary_Model ~ risk, data = microbio_pooled_affected_filtered, family = "binomial")
summary(log_model_ecoli)

multi_log_ecoli <- glm(Ecoli_Result_Binary_Model ~ index_vulnerability + index_hazard + index_capacity, data = microbio_pooled_affected_filtered, family = "binomial")
summary(multi_log_ecoli)

log_model_coliform <- glm(Coliform_Result_Binary_Model ~ risk, data = microbio_pooled_affected_filtered, family = "binomial")
summary(log_model_coliform)

multi_log_coliform <- glm(Coliform_Result_Binary_Model ~ index_vulnerability + index_hazard + index_capacity, data = microbio_pooled_affected_filtered, family = "binomial")
summary(multi_log_coliform)
```

## 4. Youden's J statistic for risk index split

Youden's J statistic was used to compute the cutoff threshold for contaminated vs. uncontaminated samples. The cutoff was 0.2103 for E. coli and 0.2006 for Coliform.

```{r}
# ROC with Youden's J statistic
ROCit_obj_ecoli <- rocit(score = microbio_pooled_affected_filtered$risk, class = microbio_pooled_affected_filtered$Ecoli_Result_Binary_Model)
plot(ROCit_obj_ecoli)

ROCit_obj_coliform <- rocit(score = microbio_pooled_affected_filtered$risk, class = microbio_pooled_affected_filtered$Coliform_Result_Binary_Model)
plot(ROCit_obj_coliform)

# Risk index cutoff for E. coli test result
ecoli_cp <- cutpointr(microbio_pooled_affected_filtered, risk, Ecoli_Result_Binary_Model, direction = ">=", method = maximize_metric, metric = youden, na.rm = TRUE)

summary(ecoli_cp)

# Risk index cutoff for Coliform test result
coliform_cp <- cutpointr(microbio_pooled_affected_filtered, risk, Coliform_Result_Binary_Model, direction = ">=", method = maximize_metric, metric = youden, na.rm = TRUE)

summary(coliform_cp)
```

## 5. CART for risk index split

The implementation below develops a decision tree model using the CART (classification and regression tree) algorithm to identify the optimal split that separates uncontaminated vs. contaminated samples. The input is the risk index from the three separate modules, as well as the overall risk index.

CART for classification splits the data into smaller and smaller subsets to minimize the Gini impurity, the probability of a sample being misclassified, of the resultant subsets.

```{r}
set.seed(123)
train_indices <- sample(1:nrow(microbio_pooled_affected_filtered), 0.8 * nrow(microbio_pooled_affected_filtered))
train_data <- microbio_pooled_affected_filtered[train_indices, ]
test_data <- microbio_pooled_affected_filtered[-train_indices, ]
tree_model <- rpart(Ecoli_Result_Binary ~ risk + index_vulnerability + index_hazard + index_capacity, data = microbio_pooled_affected_filtered, method = "class", control = rpart.control(minsplit = 1))

# pdf("cart.pdf")
rpart.plot(tree_model, type = 5, extra = 101, fallen.leaves = TRUE)
# dev.off()

printcp(tree_model)
# summary(tree_model)
```
